var levelFileNames=["blocks.js","theReturnOfBlocks.js","levelThree.js","multiplicity.js","traps.js","trees.js",];var display;var output;var editor;var map;var currentLevel=0;function init(){display=new ROT.Display({width:dimensions.width,height:dimensions.height,fontFamily:'"droid sans mono", monospace',fontSize:20,});display.setupEventHandlers();$("#screen").append(display.getContainer());output=new ROT.Display({width:dimensions.width*1.33,height:2,fontFamily:'"droid sans mono", monospace',fontSize:15});$("#output").append(output.getContainer());map=new Map(display);editor=createEditor("editor","",600,500);getLevel(currentLevel);display.focus();shortcut.add("ctrl+1",function(){display.focus();return true});shortcut.add("ctrl+2",function(){editor.focus();return true});shortcut.add("ctrl+3",function(){return true});shortcut.add("ctrl+4",function(){resetEditor();return true});shortcut.add("ctrl+5",function(){evalLevelCode();return true});shortcut.add("ctrl+6",function(){usePhone();return true})}function moveToNextLevel(){currentLevel++;display.fadeOut(map,function(){getLevel(currentLevel)})}function getLevel(a){var b;if(a<levelFileNames.length){b=levelFileNames[a]}else{b="dummyLevel.js"}$.get("levels/"+b,function(c){if(editor){editor.toTextArea()}loadLevel(c,a)})}function loadLevel(d,c){editor=createEditor("editor",d,600,500);editor.setValue(d);levelMetadata=editor.getLine(0);editableLineRanges=JSON.parse(levelMetadata.slice(3)).editable;editableLines=[];for(var a=0;a<editableLineRanges.length;a++){range=editableLineRanges[a];for(var b=range[0];b<=range[1];b++){editableLines.push(b-1)}}editor.removeLine(0);editor.on("beforeChange",function(e,f){if(editableLines.indexOf(f.to.line)==-1||f.to.line!=f.from.line||(f.to.ch>80&&f.to.ch>=f.from.ch)){f.cancel()}});editor.on("update",function(e){for(var f=0;f<editor.lineCount();f++){if(editableLines.indexOf(f)==-1){e.addLineClass(f,"wrap","disabled")}}});editor.refresh();editor.getPlayerCode=function(){var f="";for(var e=0;e<editor.lineCount();e++){if(editableLines.indexOf(e)>-1){f+=editor.getLine(e)+" \n"}}return f};evalLevelCode(c);if(c<levelFileNames.length){display.fadeIn(map)}if(currentLevel==0){output.write("Dr. Eval awoke in a strange dungeon, with no apparent way out. He spied his trusty computer ...")}}function resetEditor(){getLevel(currentLevel)}function evalLevelCode(b){var a=editor.getValue();var c=editor.getPlayerCode();var d=validate(a,c,currentLevel);if(d){map.reset();d(map);if(b>=levelFileNames.length){return}display.drawAll(map)}}function usePhone(){if(map.getPlayer()._phoneFunc){map.getPlayer()._phoneFunc()}else{output.write("RotaryPhoneException: Your function phone is not bound to any function.")}}ROT.Display.prototype.setupEventHandlers=function(){var a={37:"left",38:"up",39:"right",40:"down"};$(this.getContainer()).attr("contentEditable","true");this.getContainer().addEventListener("keydown",function(b){if(a[b.keyCode]){map.getPlayer().move(a[b.keyCode])}});this.getContainer().addEventListener("click",function(b){$(this).addClass("focus");$(".CodeMirror").removeClass("focus")})};ROT.Display.prototype.drawObject=function(c,g,e,b,f){var a=objects[e].symbol;var d;if(objects[e].color){d=objects[e].color}else{d="#fff"}if(!b){b="#000"}if(f){d=ROT.Color.toHex(ROT.Color.multiply(f,ROT.Color.fromString(d)));b=ROT.Color.toHex(ROT.Color.multiply(f,ROT.Color.fromString(b)))}this.draw(c,g,a,d,b)};ROT.Display.prototype.drawAll=function(c,b){for(var a=0;a<dimensions.width;a++){for(var d=0;d<dimensions.height;d++){this.drawObject(a,d,c.getGrid()[a][d].type,c.getGrid()[a][d].bgColor,b)}}if(c.getPlayer()){c.getPlayer().draw()}};ROT.Display.prototype.fadeOut=function(d,c,a){var b=this;if(a<=0){if(c){c()}}else{if(!a){a=255}this.drawAll(d,[a,a,a]);setTimeout(function(){b.fadeOut(d,c,a-10)},10)}};ROT.Display.prototype.fadeIn=function(d,c,a){var b=this;if(a>255){if(c){c()}}else{if(!a){a=0}this.drawAll(d,[a,a,a]);setTimeout(function(){b.fadeIn(d,c,a+5)},10)}};ROT.Display.prototype.write=function(a){output.clear();output.drawText(0,0,a)};ROT.Display.prototype.focus=function(){$(display.getContainer()).attr("tabindex","0").click().focus()};var createEditor=function(a,c,d,e){var b=CodeMirror.fromTextArea(document.getElementById(a),{theme:"vibrant-ink",lineNumbers:true,dragDrop:false,extraKeys:{Enter:function(){}}});b.setSize(d,e);b.setValue(c);b.on("focus",function(f){$(".CodeMirror").addClass("focus");$("#screen canvas").removeClass("focus")});return b};var dimensions={width:50,height:25};function Map(c){var b;var a;this.reset=function(){this.display.clear();a=new Array(dimensions.width);for(var d=0;d<dimensions.width;d++){a[d]=new Array(dimensions.height);for(var e=0;e<dimensions.height;e++){a[d][e]={type:"empty"}}}b=null};this.getPlayer=function(){return b};this.getGrid=function(){return a};this.getWidth=function(){return dimensions.width};this.getHeight=function(){return dimensions.height};this.placeObject=function(e,g,f,d){if(typeof(a[e])!=="undefined"&&typeof(a[e][g])!=="undefined"){if(!b.atLocation(e,g)||f=="empty"){a[e][g].type=f}}};this.placePlayer=function(d,e){if(b){throw"Can't place player twice!"}b=new Player(d,e,this);b.draw()};this.setSquareColor=function(e,f,d){a[e][f].bgColor=d};this.canMoveTo=function(d,e){if(d<0||d>=dimensions.width||e<0||e>=dimensions.height){return false}return objects[map.getGrid()[d][e].type].passable};this.display=c;this.reset()}var pickedUpComputer=false;var pickedUpPhone=false;var objects={empty:{symbol:" ",passable:true},block:{symbol:"#",color:"#f00",passable:false},tree:{symbol:"♣",color:"#080",passable:false},trap:{symbol:" ",passable:true,onCollision:function(a){a.killedBy("an invisible trap")}},stream:{symbol:"░",passable:true,onCollision:function(a){a.killedBy("drowning in deep dark water")}},exit:{symbol:String.fromCharCode(9109),color:"#0ff",passable:true,onCollision:function(a){moveToNextLevel()}},player:{symbol:"@",color:"#0f0",passable:false},computer:{symbol:String.fromCharCode(8984),color:"#ccc",passable:true,onCollision:function(a){a.pickUpItem();pickedUpComputer=true;output.write("You have picked up the computer! You can use it to get past the walls to the exit.");$("#editorPane").fadeIn();editor.refresh()}},phone:{symbol:String.fromCharCode(9742),passable:true,onCollision:function(a){a.pickUpItem();pickedUpPhone=true;output.write("You have picked up the function phone! You can use it to call functions, as defined by setPhoneCallback in the level code.");$("#phoneButton").show()}}};var Player=function(a,e,d){var c=a;var b=e;this._rep="@";this._fgColor="#0f0";this._display=d.display;this.getX=function(){return c};this.getY=function(){return b};this.draw=function(){var f=d.getGrid()[c][b].bgColor;this._display.draw(c,b,this._rep,this._fgColor,f)};this.atLocation=function(f,g){return(c===f&&b===g)};this.move=function(j){var i=c;var h=b;var g;var f;if(j==="up"){g=i;f=h-1}else{if(j==="down"){g=i;f=h+1}else{if(j==="left"){g=i-1;f=h}else{if(j==="right"){g=i+1;f=h}}}}if(d.canMoveTo(g,f)){this._display.drawObject(i,h,d.getGrid()[i][h].type,d.getGrid()[i][h].bgColor);c=g;b=f;this.draw();if(objects[d.getGrid()[g][f].type].onCollision){objects[d.getGrid()[g][f].type].onCollision(this)}}else{console.log("Can't move to "+g+", "+f+", reported from inside Player.move() method")}};this.killedBy=function(f){alert("You have been killed by "+f+"!");getLevel(currentLevel)};this.pickUpItem=function(){d.placeObject(c,b,"empty");this.move("left");this.move("right")};this.setPhoneCallback=function(f){this._phoneFunc=f}};var VERBOTEN=["eval","prototype","delete","return","moveToNextLevel"];var validationRulesByLevel=[null];var DummyDisplay=function(){this.clear=function(){};this.draw=function(){};this.drawObject=function(){}};function validate(allCode,playerCode,level){validateLevel=function(){};output.clear();try{for(var i=0;i<VERBOTEN.length;i++){var badWord=VERBOTEN[i];if(playerCode.indexOf(badWord)>-1){throw"You are not allowed to use "+badWord+"!"}}var dummyMap=new Map(new DummyDisplay);eval(allCode);startLevel(dummyMap);if(typeof(validateLevel)!="undefined"){validateLevel(dummyMap)}return startLevel}catch(e){output.drawText(0,0,e.toString())}}function validateAtLeastXObjects(e,b,c){var d=0;for(var a=0;a<e.getWidth();a++){for(var f=0;f<e.getHeight();f++){if(e.getGrid()[a][f].type===c){d++}}}if(d<b){throw"Not enough "+c+"s on the map! Expected: "+b+", found: "+d}}function validateExactlyXManyObjects(e,b,c){var d=0;for(var a=0;a<e.getWidth();a++){for(var f=0;f<e.getHeight();f++){if(e.getGrid()[a][f].type===c){d++}}}if(d!=b){throw"Wrong number of "+c+"s on the map! Expected: "+b+", found: "+d}};
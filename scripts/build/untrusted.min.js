$(document).ready(function(){new Game()});function Game(){_currentPlayer=null;this.levelFileNames=[null,"blocks.js","theReturnOfBlocks.js","levelThree.js","multiplicity.js","traps.js","trees.js",];this.currentLevel=1;this.setCurrentPlayer=function(a){_currentPlayer=a};this.getCurrentPlayer=function(){return _currentPlayer};this.init=function(){var a=this;this.display=ROT.Display.create(this,{width:dimensions.width,height:dimensions.height,fontSize:20,});this.display.setupEventHandlers();$("#screen").append(this.display.getContainer());this.output=ROT.Display.create(this,{width:dimensions.width*1.33,height:2,fontSize:15});$("#output").append(this.output.getContainer());this.map=new Map(this.display,this);_currentPlayer=new Player(-1,-1,this.map);this.editor=CodeMirror.create("editor","",600,500,this);this.getLevel(this.currentLevel);this.display.focus();shortcut.add("ctrl+1",function(){a.display.focus();return true});shortcut.add("ctrl+2",function(){a.editor.focus();return true});shortcut.add("ctrl+3",function(){return true});shortcut.add("ctrl+4",function(){a.resetEditor();return true});shortcut.add("ctrl+5",function(){a.evalLevelCode();return true});shortcut.add("ctrl+6",function(){a.usePhone();return true});$("#mapButton").click(function(){a.display.focus()});$("#editorButton").click(function(){a.editor.focus()});$("#resetButton").click(function(){a.resetEditor()});$("#executeButton").click(function(){a.evalLevelCode()});$("#phoneButton").click(function(){a.usePhone()})};this.moveToNextLevel=function(){var a=this;this.currentLevel++;this.output.write("Loading level "+this.currentLevel+" ...");this.getCurrentPlayer().canMove=false;this.display.fadeOut(this.map,function(){a.getLevel(a.currentLevel)})};this.getLevel=function(b){var a=this;this.currentLevel=b;var c;if(b<this.levelFileNames.length){c=this.levelFileNames[b]}else{c="dummyLevel.js"}$.get("levels/"+c,function(d){if(a.editor){a.editor.toTextArea()}a.loadLevel(d,b)})};this.loadLevel=function(b,a){this.editor=CodeMirror.create("editor",b,600,500,this);this.evalLevelCode(a);if(a<this.levelFileNames.length){this.display.fadeIn(this.map,function(){})}if(this.currentLevel==1){this.output.write("Dr. Eval awoke in a strange dungeon, with no apparent way out. He spied his trusty computer ...")}};this.resetEditor=function(){this.getLevel(this.currentLevel)};this.evalLevelCode=function(c){var d=this.editor.getValue();var h=this.editor.getPlayerCode();var g=this.validate(d,h,this.currentLevel);if(g){this.map.reset();var b=this;var f=this.map;var e=this.display;var a=this.output;g(f);_currentPlayer=this.map.getPlayer();_currentPlayer.canMove=true;if(!(c>=this.levelFileNames.length)){this.map.refresh()}}};this.usePhone=function(){if(this.map.getPlayer()._phoneFunc){this.map.getPlayer()._phoneFunc()}else{this.output.write("RotaryPhoneException: Your function phone is not bound to any function.")}};this.init()}ROT.Display.create=function(a,b){b.fontFamily='"droid sans mono", monospace';var c=new ROT.Display(b);c.game=a;return c};ROT.Display.prototype.setupEventHandlers=function(){var a=this.game;var b={37:"left",38:"up",39:"right",40:"down"};$(this.getContainer()).attr("contentEditable","true");this.getContainer().addEventListener("keydown",function(c){if(b[c.keyCode]){a.map.getPlayer().move(b[c.keyCode])}});this.getContainer().addEventListener("click",function(c){$(this).addClass("focus");$(".CodeMirror").removeClass("focus")})};ROT.Display.prototype.drawObject=function(a,g,c,f,d){var e=this.game.objects[c].symbol;var b;if(this.game.objects[c].color){b=this.game.objects[c].color}else{b="#fff"}if(!f){f="#000"}if(d){b=ROT.Color.toHex(ROT.Color.multiply(d,ROT.Color.fromString(b)));f=ROT.Color.toHex(ROT.Color.multiply(d,ROT.Color.fromString(f)))}this.draw(a,g,e,b,f)};ROT.Display.prototype.drawAll=function(c,b){for(var a=0;a<dimensions.width;a++){for(var d=0;d<dimensions.height;d++){this.drawObject(a,d,c.getGrid()[a][d].type,c.getGrid()[a][d].bgColor,b)}}if(c.getPlayer()){c.getPlayer().draw()}};ROT.Display.prototype.fadeOut=function(c,d,a){var b=this;if(a<=0){if(d){d()}}else{if(!a){a=255}this.drawAll(c,[a,a,a]);setTimeout(function(){b.fadeOut(c,d,a-10)},10)}};ROT.Display.prototype.fadeIn=function(c,d,a){var b=this;if(a>255){if(d){d()}}else{if(!a){a=0}this.drawAll(c,[a,a,a]);setTimeout(function(){b.fadeIn(c,d,a+5)},10)}};ROT.Display.prototype.write=function(a){this.clear();this.drawText(0,0,a)};ROT.Display.prototype.focus=function(){$(this.getContainer()).attr("tabindex","0").click().focus()};CodeMirror.create=function(f,g,a,l,k){var e=CodeMirror.fromTextArea(document.getElementById(f),{theme:"vibrant-ink",lineNumbers:true,dragDrop:false,extraKeys:{Enter:function(i){var j=i.getCursor();j.line++;i.setCursor(j)}}});e.game=k;e.setSize(a,l);e.setValue(g);e.on("focus",function(i){$(".CodeMirror").addClass("focus");$("#screen canvas").removeClass("focus")});e.editableLines=[];if(g&&g!=""){var b=g.split("\n")[0];var h=JSON.parse(b.slice(3)).editable;for(var c=0;c<h.length;c++){range=h[c];for(var d=range[0];d<=range[1];d++){e.editableLines.push(d-1)}}e.removeLine(0);e.on("beforeChange",function(j,n){if(e.editableLines.indexOf(n.to.line)==-1){n.cancel();return}else{if(n.origin=="+delete"){if(n.to.line!=n.from.line){n.cancel()}}else{if(n.text.length>1){n.text=[n.text[0]]}var i=j.getLine(n.to.line).length;if(i+n.text[0].length>80){var m=Math.max(80-i,0);n.text[0]=n.text[0].substr(0,m)}}}});e.on("update",function(j){for(var m=0;m<j.lineCount();m++){if(e.editableLines.indexOf(m)==-1){j.addLineClass(m,"wrap","disabled")}}});e.refresh()}return e};CodeMirror.prototype.getPlayerCode=function(){var b="";for(var a=0;a<this.lineCount();a++){if(this.editableLines&&this.editableLines.indexOf(a)>-1){b+=this.game.editor.getLine(a)+" \n"}}return b};var dimensions={width:50,height:25};function Map(d,b){var c;var a;this.reset=function(){this.display.clear();a=new Array(dimensions.width);for(var e=0;e<dimensions.width;e++){a[e]=new Array(dimensions.height);for(var f=0;f<dimensions.height;f++){a[e][f]={type:"empty"}}}c=null};this.getPlayer=function(){return c};this.getGrid=function(){return a};this.getWidth=function(){return dimensions.width};this.getHeight=function(){return dimensions.height};this.refresh=function(){this.display.drawAll(this)};this.placeObject=function(e,h,f,g){if(typeof(a[e])!=="undefined"&&typeof(a[e][h])!=="undefined"){if(!c.atLocation(e,h)||f=="empty"){a[e][h].type=f}}};this.placePlayer=function(e,f){if(c){throw"Can't place player twice!"}c=new Player(e,f,this);c.draw()};this.setSquareColor=function(e,g,f){a[e][g].bgColor=f};this.canMoveTo=function(e,f){if(e<0||e>=dimensions.width||f<0||f>=dimensions.height){return false}return !(this.game.objects[this.getGrid()[e][f].type].impassable)};this.game=b;this.display=d;this.reset()}Game.prototype.objects={empty:{symbol:" "},player:{symbol:"@",color:"#0f0"},exit:{symbol:String.fromCharCode(9109),color:"#0ff",onCollision:function(b,a){a.moveToNextLevel()}},block:{symbol:"#",color:"#f00",impassable:true},tree:{symbol:"♣",color:"#080",impassable:true},trap:{symbol:" ",onCollision:function(b,a){b.killedBy("an invisible trap")}},stream:{symbol:"░",onCollision:function(b,a){b.killedBy("drowning in deep dark water")}},computer:{type:"item",symbol:String.fromCharCode(8984),color:"#ccc",onPickUp:function(b,a){a.output.write("You have picked up the computer! You can use it to get past the walls to the exit.");$("#editorPane").fadeIn();a.editor.refresh()}},phone:{type:"item",symbol:String.fromCharCode(9742),onPickUp:function(b,a){a.output.write("You have picked up the function phone! You can use it to call functions, as defined by setPhoneCallback in the level code.");$("#phoneButton").show()}}};function Player(a,f,e){var c=a;var b=f;var d=[];this.rep="@";this.fgColor="#0f0";this.map=e;this.display=e.display;this.game=e.game;this.canMove=false;this.getX=function(){return c};this.getY=function(){return b};this.init=function(){var g=this.game.getCurrentPlayer();if(g){if(g.hasItem("computer")){d.push("computer")}if(g.hasItem("phone")){d.push("phone")}}};this.draw=function(){var g=this.map.getGrid()[c][b].bgColor;this.display.draw(c,b,this.rep,this.fgColor,g)};this.atLocation=function(g,h){return(c===g&&b===h)};this.move=function(i){if(!this.canMove){return false}var k=c;var j=b;var h;var g;if(i==="up"){h=k;g=j-1}else{if(i==="down"){h=k;g=j+1}else{if(i==="left"){h=k-1;g=j}else{if(i==="right"){h=k+1;g=j}}}}if(this.map.canMoveTo(h,g)){this.display.drawObject(k,j,this.map.getGrid()[k][j].type,this.map.getGrid()[k][j].bgColor);c=h;b=g;this.draw();this.afterMove(c,b)}};this.afterMove=function(g,j){var i=this.map.getGrid()[g][j].type;var h=this.game.objects[i];if(h.type=="item"){this.pickUpItem(i,h)}else{if(h.onCollision){h.onCollision(this,this.game)}}};this.killedBy=function(g){alert("You have been killed by "+g+"!");getLevel(currentLevel)};this.pickUpItem=function(h,g){d.push(h);e.placeObject(c,b,"empty");e.refresh();if(g.onPickUp){g.onPickUp(this,this.game)}};this.hasItem=function(g){return d.indexOf(g)>-1};this.setPhoneCallback=function(g){this._phoneFunc=g};this.init()}var VERBOTEN=["eval","prototype","delete","return","moveToNextLevel"];var DummyDisplay=function(){this.clear=function(){};this.draw=function(){};this.drawObject=function(){}};Game.prototype.validate=function(allCode,playerCode,level){function validateAtLeastXObjects(map,num,type){var count=0;for(var x=0;x<map.getWidth();x++){for(var y=0;y<map.getHeight();y++){if(map.getGrid()[x][y].type===type){count++}}}if(count<num){throw"Not enough "+type+"s on the map! Expected: "+num+", found: "+count}}function validateExactlyXManyObjects(map,num,type){var count=0;for(var x=0;x<map.getWidth();x++){for(var y=0;y<map.getHeight();y++){if(map.getGrid()[x][y].type===type){count++}}}if(count!=num){throw"Wrong number of "+type+"s on the map! Expected: "+num+", found: "+count}}validateLevel=function(){};this.output.clear();try{for(var i=0;i<VERBOTEN.length;i++){var badWord=VERBOTEN[i];if(playerCode.indexOf(badWord)>-1){throw"You are not allowed to use "+badWord+"!"}}var game=this;var display=this.display;var output=this.output;var dummyMap=new Map(new DummyDisplay,this);eval(allCode);startLevel(dummyMap);if(typeof(validateLevel)!="undefined"){validateLevel(dummyMap)}return startLevel}catch(e){this.output.drawText(0,0,e.toString());throw e}};
function Game(){this.levelFileNames=["blocks.js","theReturnOfBlocks.js","levelThree.js","multiplicity.js","traps.js","trees.js",];this.currentLevel=0;this.init=function(){this.display=new ROT.Display({width:dimensions.width,height:dimensions.height,fontFamily:'"droid sans mono", monospace',fontSize:20,});this.display.setupEventHandlers();$("#screen").append(this.display.getContainer());this.output=new ROT.Display({width:dimensions.width*1.33,height:2,fontFamily:'"droid sans mono", monospace',fontSize:15});$("#output").append(this.output.getContainer());this.map=new Map(this.display);this.editor=createEditor("editor","",600,500);this.getLevel(this.currentLevel);this.display.focus();shortcut.add("ctrl+1",function(){game.display.focus();return true});shortcut.add("ctrl+2",function(){game.editor.focus();return true});shortcut.add("ctrl+3",function(){return true});shortcut.add("ctrl+4",function(){game.resetEditor();return true});shortcut.add("ctrl+5",function(){game.evalLevelCode();return true});shortcut.add("ctrl+6",function(){game.usePhone();return true})};this.moveToNextLevel=function(){var a=this;this.currentLevel++;this.display.fadeOut(this.map,function(){a.getLevel(a.currentLevel)})};this.getLevel=function(b){var a=this;this.currentLevel=b;var c;if(b<this.levelFileNames.length){c=this.levelFileNames[b]}else{c="dummyLevel.js"}$.get("levels/"+c,function(d){if(a.editor){a.editor.toTextArea()}a.loadLevel(d,b)})};this.loadLevel=function(b,a){this.editor=createEditor("editor",b,600,500);this.evalLevelCode(a);if(a<this.levelFileNames.length){this.display.fadeIn(this.map)}if(this.currentLevel==0){this.output.write("Dr. Eval awoke in a strange dungeon, with no apparent way out. He spied his trusty computer ...")}};this.resetEditor=function(){this.getLevel(this.currentLevel)};this.evalLevelCode=function(c){var a=this.editor.getValue();var f=this.editor.getPlayerCode();var g=this.validate(a,f,this.currentLevel);if(g){this.map.reset();var e=this.map;var d=this.display;var b=this.output;g(e);if(c>=this.levelFileNames.length){return}this.display.drawAll(e)}};this.usePhone=function(){if(this.map.getPlayer()._phoneFunc){this.map.getPlayer()._phoneFunc()}else{this.output.write("RotaryPhoneException: Your function phone is not bound to any function.")}};this.init()}ROT.Display.prototype.setupEventHandlers=function(){var a={37:"left",38:"up",39:"right",40:"down"};$(this.getContainer()).attr("contentEditable","true");this.getContainer().addEventListener("keydown",function(b){if(a[b.keyCode]){game.map.getPlayer().move(a[b.keyCode])}});this.getContainer().addEventListener("click",function(b){$(this).addClass("focus");$(".CodeMirror").removeClass("focus")})};ROT.Display.prototype.drawObject=function(c,g,e,b,f){var a=objects[e].symbol;var d;if(objects[e].color){d=objects[e].color}else{d="#fff"}if(!b){b="#000"}if(f){d=ROT.Color.toHex(ROT.Color.multiply(f,ROT.Color.fromString(d)));b=ROT.Color.toHex(ROT.Color.multiply(f,ROT.Color.fromString(b)))}this.draw(c,g,a,d,b)};ROT.Display.prototype.drawAll=function(c,b){for(var a=0;a<dimensions.width;a++){for(var d=0;d<dimensions.height;d++){this.drawObject(a,d,c.getGrid()[a][d].type,c.getGrid()[a][d].bgColor,b)}}if(c.getPlayer()){c.getPlayer().draw()}};ROT.Display.prototype.fadeOut=function(d,c,a){var b=this;if(a<=0){if(c){c()}}else{if(!a){a=255}this.drawAll(d,[a,a,a]);setTimeout(function(){b.fadeOut(d,c,a-10)},10)}};ROT.Display.prototype.fadeIn=function(d,c,a){var b=this;if(a>255){if(c){c()}}else{if(!a){a=0}this.drawAll(d,[a,a,a]);setTimeout(function(){b.fadeIn(d,c,a+5)},10)}};ROT.Display.prototype.write=function(a){this.clear();this.drawText(0,0,a)};ROT.Display.prototype.focus=function(){$(this.getContainer()).attr("tabindex","0").click().focus()};function createEditor(a,k,b,g){var f=CodeMirror.fromTextArea(document.getElementById(a),{theme:"vibrant-ink",lineNumbers:true,dragDrop:false,extraKeys:{Enter:function(i){var j=i.getCursor();j.line++;i.setCursor(j)}}});f.setSize(b,g);f.setValue(k);f.on("focus",function(i){$(".CodeMirror").addClass("focus");$("#screen canvas").removeClass("focus")});this.editableLines=[];if(k&&k!=""){var c=k.split("\n")[0];var h=JSON.parse(c.slice(3)).editable;for(var d=0;d<h.length;d++){range=h[d];for(var e=range[0];e<=range[1];e++){this.editableLines.push(e-1)}}f.removeLine(0);f.on("beforeChange",function(i,l){if(this.editableLines.indexOf(l.to.line)==-1){l.cancel();return}else{if(l.origin=="+delete"){if(l.to.line!=l.from.line){l.cancel()}}else{if(l.text.length>1){l.text=[l.text[0]]}var j=i.getLine(l.to.line).length;if(j+l.text[0].length>80){var m=Math.max(80-j,0);l.text[0]=l.text[0].substr(0,m)}}}console.log(l)});f.on("update",function(j){for(var l=0;l<j.lineCount();l++){if(this.editableLines.indexOf(l)==-1){j.addLineClass(l,"wrap","disabled")}}});f.refresh()}return f}CodeMirror.prototype.getPlayerCode=function(){var b="";for(var a=0;a<this.lineCount();a++){if(this.editableLines&&this.editableLines.indexOf(a)>-1){b+=game.editor.getLine(a)+" \n"}}return b};var dimensions={width:50,height:25};function Map(c){var b;var a;this.reset=function(){this.display.clear();a=new Array(dimensions.width);for(var d=0;d<dimensions.width;d++){a[d]=new Array(dimensions.height);for(var e=0;e<dimensions.height;e++){a[d][e]={type:"empty"}}}b=null};this.getPlayer=function(){return b};this.getGrid=function(){return a};this.getWidth=function(){return dimensions.width};this.getHeight=function(){return dimensions.height};this.placeObject=function(e,g,f,d){if(typeof(a[e])!=="undefined"&&typeof(a[e][g])!=="undefined"){if(!b.atLocation(e,g)||f=="empty"){a[e][g].type=f}}};this.placePlayer=function(d,e){if(b){throw"Can't place player twice!"}b=new Player(d,e,this);b.draw()};this.setSquareColor=function(e,f,d){a[e][f].bgColor=d};this.canMoveTo=function(d,e){if(d<0||d>=dimensions.width||e<0||e>=dimensions.height){return false}return objects[this.getGrid()[d][e].type].passable};this.display=c;this.reset()}var pickedUpComputer=false;var pickedUpPhone=false;var objects={empty:{symbol:" ",passable:true},block:{symbol:"#",color:"#f00",passable:false},tree:{symbol:"♣",color:"#080",passable:false},trap:{symbol:" ",passable:true,onCollision:function(a){game.map.getPlayer().killedBy("an invisible trap")}},stream:{symbol:"░",passable:true,onCollision:function(a){game.map.getPlayer().killedBy("drowning in deep dark water")}},exit:{symbol:String.fromCharCode(9109),color:"#0ff",passable:true,onCollision:function(a){game.moveToNextLevel()}},player:{symbol:"@",color:"#0f0",passable:false},computer:{symbol:String.fromCharCode(8984),color:"#ccc",passable:true,onCollision:function(a){game.map.getPlayer().pickUpItem();pickedUpComputer=true;game.output.write("You have picked up the computer! You can use it to get past the walls to the exit.");$("#editorPane").fadeIn();game.editor.refresh()}},phone:{symbol:String.fromCharCode(9742),passable:true,onCollision:function(a){game.map.getPlayer().pickUpItem();pickedUpPhone=true;game.output.write("You have picked up the function phone! You can use it to call functions, as defined by setPhoneCallback in the level code.");$("#phoneButton").show()}}};function Player(a,e,d){var c=a;var b=e;this._rep="@";this._fgColor="#0f0";this._display=d.display;this.getX=function(){return c};this.getY=function(){return b};this.draw=function(){var f=d.getGrid()[c][b].bgColor;this._display.draw(c,b,this._rep,this._fgColor,f)};this.atLocation=function(f,g){return(c===f&&b===g)};this.move=function(j){var i=c;var h=b;var g;var f;if(j==="up"){g=i;f=h-1}else{if(j==="down"){g=i;f=h+1}else{if(j==="left"){g=i-1;f=h}else{if(j==="right"){g=i+1;f=h}}}}if(d.canMoveTo(g,f)){this._display.drawObject(i,h,d.getGrid()[i][h].type,d.getGrid()[i][h].bgColor);c=g;b=f;this.draw();if(objects[d.getGrid()[g][f].type].onCollision){objects[d.getGrid()[g][f].type].onCollision(this)}}};this.killedBy=function(f){alert("You have been killed by "+f+"!");getLevel(currentLevel)};this.pickUpItem=function(){d.placeObject(c,b,"empty");this.move("left");this.move("right")};this.setPhoneCallback=function(f){this._phoneFunc=f}}var VERBOTEN=["eval","prototype","delete","return","moveToNextLevel"];var validationRulesByLevel=[null];var DummyDisplay=function(){this.clear=function(){};this.draw=function(){};this.drawObject=function(){}};Game.prototype.validate=function(allCode,playerCode,level){function validateAtLeastXObjects(map,num,type){var count=0;for(var x=0;x<map.getWidth();x++){for(var y=0;y<map.getHeight();y++){if(map.getGrid()[x][y].type===type){count++}}}if(count<num){throw"Not enough "+type+"s on the map! Expected: "+num+", found: "+count}}function validateExactlyXManyObjects(map,num,type){var count=0;for(var x=0;x<map.getWidth();x++){for(var y=0;y<map.getHeight();y++){if(map.getGrid()[x][y].type===type){count++}}}if(count!=num){throw"Wrong number of "+type+"s on the map! Expected: "+num+", found: "+count}}validateLevel=function(){};this.output.clear();try{for(var i=0;i<VERBOTEN.length;i++){var badWord=VERBOTEN[i];if(playerCode.indexOf(badWord)>-1){throw"You are not allowed to use "+badWord+"!"}}var display=this.display;var output=this.output;var dummyMap=new Map(new DummyDisplay);eval(allCode);startLevel(dummyMap);if(typeof(validateLevel)!="undefined"){validateLevel(dummyMap)}return startLevel}catch(e){this.output.drawText(0,0,e.toString());throw e}};